{"ast":null,"code":"var _jsxFileName = \"/Users/dobby/Desktop/CODING/reactdeveloper/reactCoding/project2/src/App.js\";\nimport { useRef, useState } from \"react\";\nimport './App.css';\nimport Header from './component/Header';\nimport TodoEditor from './component/TodoEditor';\nimport TodoList from './component/TodoList';\nimport TestComponent from \"./component/TestComponent\";\n\n/*\nfunction App() {\n  const mockTodo = [\n    {\n      id: 0,\n      isDone: false,\n      content: \"React study\",\n      createdDate: new Date().getTime(),\n    },\n    {\n      id: 1,\n      isDone: false,\n      content: \"Laundry\",\n      createdDate: new Date().getTime(),\n    },\n    {\n      id: 2,\n      isDone: false,\n      content: \"Practice Singing\",\n      createdDate: new Date().getTime(),\n    },\n  ]\n\n  const[todo, setTodo] = useState(mockTodo);\n  const idRef = useRef(3);\n\n  const onCreat = (content) => {\n    const newItem = {\n      id:idRef.current,\n      content,\n      isDone: false,\n      createdDate: new Date().getTime(),\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current += 1;\n  }\n\n  const onUpdate = (targetId) => {\n    setTodo(\n      todo.map((it) => \n      it.id === targetId ?\n      {...it, isDone: !it.isDone} : it)\n    );\n  }\n\n  const onDelete = (targetId) => {  // 받아온 id와 기존 id를 비교해서 같은게 있다면, 그것만 빼고 출력\n    setTodo(todo.filter((it) => it.id !== targetId));\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <TodoEditor onCreat={onCreat}/>\n      <TodoList todo={todo} onUpdate={onUpdate} onDelete={onDelete}/>\n    </div>\n  );\n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TestComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","Header","TodoEditor","TodoList","TestComponent","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dobby/Desktop/CODING/reactdeveloper/reactCoding/project2/src/App.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport './App.css';\nimport Header from './component/Header';\nimport TodoEditor from './component/TodoEditor';\nimport TodoList from './component/TodoList';\nimport TestComponent from \"./component/TestComponent\";\n\n/*\nfunction App() {\n  const mockTodo = [\n    {\n      id: 0,\n      isDone: false,\n      content: \"React study\",\n      createdDate: new Date().getTime(),\n    },\n    {\n      id: 1,\n      isDone: false,\n      content: \"Laundry\",\n      createdDate: new Date().getTime(),\n    },\n    {\n      id: 2,\n      isDone: false,\n      content: \"Practice Singing\",\n      createdDate: new Date().getTime(),\n    },\n  ]\n\n  const[todo, setTodo] = useState(mockTodo);\n  const idRef = useRef(3);\n\n  const onCreat = (content) => {\n    const newItem = {\n      id:idRef.current,\n      content,\n      isDone: false,\n      createdDate: new Date().getTime(),\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current += 1;\n  }\n\n  const onUpdate = (targetId) => {\n    setTodo(\n      todo.map((it) => \n      it.id === targetId ?\n      {...it, isDone: !it.isDone} : it)\n    );\n  }\n\n  const onDelete = (targetId) => {  // 받아온 id와 기존 id를 비교해서 같은게 있다면, 그것만 빼고 출력\n    setTodo(todo.filter((it) => it.id !== targetId));\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <TodoEditor onCreat={onCreat}/>\n      <TodoList todo={todo} onUpdate={onUpdate} onDelete={onDelete}/>\n    </div>\n  );\n}\n*/\n\nfunction App() {\n  return(\n    <div>\n      <TestComponent/>\n    </div>\n  )\n  \n}\n\nexport default App;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,aAAa,MAAM,2BAA2B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDA,SAAAC,MAAA,IAAAC,OAAA;AA2DA,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACF,aAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAGV;AAACC,EAAA,GAPQN,GAAG;AASZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}